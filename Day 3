🌐 100 Days of Cybersecurity - Day 3 Report Card
Completion Status: RECONNAISSANCE MASTERED! ✅
Day Focus: Network Reconnaissance Basics - TryHackMe "Nmap" Room
Motto: "Know thy network as you know thyself."

📊 Overall Progress Overview
Metric	Status	Emoji Verdict
THM Nmap Room	Fully Completed	🎯✅
Scan Types Mastered	8+ Techniques	🔍✅
NSE Scripts	Implemented & Tested	🛠️✅
Tool Comparison	Nmap vs Masscan	⚡✅
Checkpoint Test	PASSED	🧠✅
🎯 TryHackMe Nmap Room Breakdown
📚 Module 1: Nmap Basics
Topics Covered: Introduction to port scanning, basic syntax

Commands Practiced:

bash
nmap [target]
nmap -h
nmap -v [target]
💡 Key Learning: Understanding the fundamental purpose of network mapping

🎯 Module 2: Scan Types Deep Dive
Topics Covered: TCP Connect vs Stealth vs UDP scans

Commands Mastered:

bash
nmap -sT [target]    # TCP Connect Scan
nmap -sS [target]    # SYN Stealth Scan  
nmap -sU [target]    # UDP Scan
nmap -sA [target]    # ACK Scan
💡 Key Learning: Different scan types for different scenarios

⚡ Module 3: Performance & Timing
Topics Covered: Scan speed optimization, timing templates

Commands Tested:

bash
nmap -T0 [target]    # Paranoidly slow
nmap -T3 [target]    # Normal (default)
nmap -T5 [target]    # Insanely fast
nmap --min-rate 500 [target]
💡 Key Learning: Balancing speed vs stealth vs accuracy

🛠️ Module 4: NSE Scripting Engine
Topics Covered: Vulnerability scanning, service detection

Commands Implemented:

bash
nmap -sC [target]                    # Default scripts
nmap --script vuln [target]          # Vulnerability scans
nmap --script http-enum [target]     # HTTP enumeration
nmap --script ssh-auth-methods [target]
💡 Key Learning: Extending Nmap's capabilities with scripts

📊 Module 5: Output Formats
Topics Covered: Results documentation and analysis

Commands Used:

bash
nmap -oN normal.txt [target]
nmap -oX xml_output.xml [target]
nmap -oG greppable.txt [target]
nmap -oA all_formats [target]
💡 Key Learning: Proper documentation for penetration tests

🔬 Hands-On Scanning Practice
🎯 Comprehensive Scan on 3 Targets
bash
# Target 1: Basic Reconnaissance
nmap -sC -sV -oN target1_comprehensive.txt [TARGET_IP]

# Target 2: Stealth Approach  
nmap -sS -T2 -oN target2_stealth.txt [TARGET_IP]

# Target 3: Vulnerability Focus
nmap --script vuln -sV -oN target3_vuln_scan.txt [TARGET_IP]
📈 Scan Results Summary
Target	Open Ports	Services	Findings
Target 1	22, 80, 443	SSH, HTTP, HTTPS	Standard web server
Target 2	21, 80	FTP, HTTP	Anonymous FTP allowed
Target 3	22, 80, 3306	SSH, HTTP, MySQL	Potential SQL injection
⚡ Tool Comparison: Nmap vs Masscan
🚀 Masscan Speed Test
bash
# Ultra-fast scanning comparison
masscan -p1-1000 --rate 1000 [TARGET]
nmap -p1-1000 -T5 [TARGET]
📊 Performance Analysis
Metric	Nmap	Masscan
Speed	Moderate	⚡ Extremely Fast
Accuracy	🎯 High	Moderate
Stealth	Configurable	Limited
Detail Level	Comprehensive	Basic
Use Case	Detailed recon	Initial discovery
📚 Nmap Cheat Sheet Created
🔍 Basic Scans
bash
nmap [target]                    # Basic scan
nmap -p 80,443 [target]         # Specific ports
nmap -p- [target]               # All ports (1-65535)
🎯 Advanced Techniques
bash
nmap -sS -sV -O [target]        # Stealth + Version + OS
nmap -sU -p 53,161 [target]     # UDP services
nmap -A [target]                # Aggressive scan
📁 Output & Documentation
bash
nmap -oN scan.txt [target]      # Normal output
nmap -oX scan.xml [target]      # XML format
nmap -oG scan.gnmap [target]    # Greppable format
nmap -oA full_scan [target]     # All formats
🎯 Checkpoint Challenge
The Critical Question: "What's the difference between -sS and -sT scan types?"

ANSWER: Stealth vs Connect Scans 🎉
Scan Type	Command	How It Works	Stealth Level	Requirements
SYN Stealth Scan	nmap -sS	Sends SYN, analyzes response	🕵️‍♂️ High	Root privileges
TCP Connect Scan	nmap -sT	Completes full TCP handshake	👀 Low	No special privileges
Technical Breakdown:

-sS (Stealth SYN Scan): Half-open scanning, doesn't establish full connection

-sT (TCP Connect Scan): Completes three-way handshake, more detectable but reliable

Real-world Usage:

bash
# Stealth approach (requires root)
sudo nmap -sS -T2 [target]

# Reliable approach (no root needed)  
nmap -sT [target]
📈 Skills Leveled Up
🟢 Core Competencies
nmap 🔍 - Mastery of network scanning tool

recon 🌐 - Systematic information gathering

networking 📡 - TCP/IP protocols and port interactions

🟡 Advanced Techniques
stealth-scanning 🕵️‍♂️ - Avoiding detection

scripting 🛠️ - Automating with NSE

documentation 📊 - Professional reporting

🔵 Tool Proficiency
masscan ⚡ - High-speed network scanning

output-management 💾 - Results organization and analysis

📁 Deliverables Completed
✅ Created: Nmap Comprehensive Cheat Sheet
Basic to advanced scan types

Performance optimization flags

NSE script examples

Output formatting options

Real-world use cases

✅ Generated: 3 Target Scan Reports
Comprehensive documentation of findings

Comparison between scan techniques

Vulnerability assessment notes

Professional reporting format

💡 Key Takeaways
Scan Smarter, Not Harder - Choose the right technique for the situation

Stealth Matters - -sS scans leave fewer logs than -sT

Scripts are Powerful - NSE can automate complex vulnerability checks

Document Everything - Proper output formats enable later analysis

Know Your Tools - Nmap for detail, Masscan for speed
